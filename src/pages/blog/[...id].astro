---
import { getCollection, getEntry, render } from "astro:content";
import ArticleLayout from "../../layouts/ArticleLayout.astro";

export const prerender = true;

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const post = await getEntry('blog', entry.id)!;
const { Content } = await render(post);
---
<ArticleLayout frontmatter={entry.data}>
  <Content />
  <script data-astro-rerun is:inline>
    fetchArticleViews();
    async function fetchArticleViews() {
      console.log("fetching views for article");
      const baseURL = `${window.location.protocol}//${window.location.host}`;
      const pathname = window.location.pathname;
      const parts = pathname.split("/");
      const identifier = parts[parts.length - 1];

      const views = await fetch(`${baseURL}/views/getArticleViews`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ identifier }),
      })
        .then((res) => res.json())
        .then((data) => data.views)
        .catch((err) => {
          console.error(err);
          return 0;
        });

      const viewsElement = document.getElementById(`${identifier}-views`);
      if (viewsElement) viewsElement.textContent = `${views} views`;
    }
  </script>
</ArticleLayout>
